name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Check if the DO_SSH_KEY_BASE64 secret is set
      - name: Check if DO_SSH_KEY_BASE64 is set
        run: |
          if [ -z "$DO_SSH_KEY_BASE64" ]; then
            echo "DO_SSH_KEY_BASE64 is not set."
            exit 1
          fi
        env:
          DO_SSH_KEY_BASE64: ${{ secrets.DO_SSH_KEY_BASE64 }}
        
      # Step 3: Decode and set up SSH private key
      - name: Decode and set up SSH private key
        run: |
          echo "Decoding SSH private key..."
          mkdir -p ~/.ssh
          echo "$DO_SSH_KEY_BASE64" | base64 --decode > ~/.ssh/id_ed25519
          if [ ! -f ~/.ssh/id_ed25519 ]; then
            echo "SSH private key not found after decoding."
            exit 1
          fi
          chmod 600 ~/.ssh/id_ed25519
        env:
          DO_SSH_KEY_BASE64: ${{ secrets.DO_SSH_KEY_BASE64 }}

      # Step 4: Add the SSH key to the SSH agent
      - name: Add the SSH key to the SSH agent
        run: |
          echo "Starting SSH agent..."
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_ed25519

      # Step 5: Ensure the known_hosts file is set up (prevent SSH authenticity issues)
      - name: Set up known_hosts
        run: |
          echo "Adding ${{ secrets.DO_HOST }} to known_hosts..."
          ssh-keyscan -t ed25519 ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts
          if [ $? -ne 0 ]; then
            echo "Failed to add ${{ secrets.DO_HOST }} to known_hosts."
            exit 1
          fi
        env:
          DO_HOST: ${{ secrets.DO_HOST }}

      # Step 6: Check if SSH user and host are set
      - name: Check if DO_SSH_USER and DO_HOST are set
        run: |
          if [ -z "$DO_SSH_USER" ]; then
            echo "DO_SSH_USER is not set."
            exit 1
          fi
          if [ -z "$DO_HOST" ]; then
            echo "DO_HOST is not set."
            exit 1
          fi
        env:
          DO_SSH_USER: ${{ secrets.DO_SSH_USER }}
          DO_HOST: ${{ secrets.DO_HOST }}

      # Step 7: Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        run: |
          echo "Starting deployment to DigitalOcean..."
          rsync -avz -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no" ./ $DO_SSH_USER@$DO_HOST:/opt/pythonapp/
          if [ $? -ne 0 ]; then
            echo "Deployment failed."
            exit 1
          fi
        env:
          DO_SSH_USER: ${{ secrets.DO_SSH_USER }}
          DO_HOST: ${{ secrets.DO_HOST }}

      # Step 8: Final check
      - name: Final check
        run: |
          echo "Deployment completed successfully!"
